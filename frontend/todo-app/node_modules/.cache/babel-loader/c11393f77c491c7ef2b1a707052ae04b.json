{"ast":null,"code":"import _classCallCheck from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport { API_URL, JPA_API_URL } from '../../Constants';\n\nvar MentorDataService =\n/*#__PURE__*/\nfunction () {\n  function MentorDataService() {\n    _classCallCheck(this, MentorDataService);\n  }\n\n  _createClass(MentorDataService, [{\n    key: \"retrieveAllMentors\",\n    value: function retrieveAllMentors(name) {\n      //console.log('executed service')\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/mentors\"));\n    }\n  }, {\n    key: \"retrieveMentor\",\n    value: function retrieveMentor(name, id) {\n      //console.log('executed service')\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/mentors/\").concat(id));\n    }\n  }, {\n    key: \"deleteMentor\",\n    value: function deleteMentor(name, id) {\n      //console.log('executed service')\n      return axios.delete(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/mentors/\").concat(id));\n    }\n  }, {\n    key: \"updateMentor\",\n    value: function updateMentor(name, id, mentor) {\n      //console.log('executed service')\n      return axios.put(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/mentors/\").concat(id), mentor);\n    }\n  }, {\n    key: \"createMentor\",\n    value: function createMentor(name, mentor) {\n      //console.log('executed service')\n      return axios.post(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/mentors/\"), mentor);\n    }\n  }, {\n    key: \"isMentor\",\n    value: function isMentor(name, courseId) {\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/mentors/\").concat(courseId, \"/isMentor\"));\n    }\n  }, {\n    key: \"getActiveMentor\",\n    value: function getActiveMentor(courseId) {\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/mentors/\").concat(courseId, \"/getActiveMentor\"));\n    }\n  }, {\n    key: \"setRate\",\n    value: function setRate(mentorName, courseId, rate) {\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(mentorName, \"/mentors/\").concat(courseId, \"/setRate/\").concat(rate));\n    }\n  }]);\n\n  return MentorDataService;\n}();\n\nexport default new MentorDataService();","map":{"version":3,"sources":["E:\\Bachelor of Computer Science\\3rd Semester\\Software Engineering - Process & Tools\\SEPTOne\\frontend\\todo-app\\src\\api\\todo\\MentorDataService.js"],"names":["axios","API_URL","JPA_API_URL","MentorDataService","name","get","id","delete","mentor","put","post","courseId","mentorName","rate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,iBAArC;;IAEMC,iB;;;;;;;;;uCAEiBC,I,EAAM;AACrB;AACA,aAAOJ,KAAK,CAACK,GAAN,WAAaH,WAAb,oBAAkCE,IAAlC,cAAP;AACH;;;mCAEcA,I,EAAME,E,EAAI;AACrB;AACA,aAAON,KAAK,CAACK,GAAN,WAAaH,WAAb,oBAAkCE,IAAlC,sBAAkDE,EAAlD,EAAP;AACH;;;iCAEYF,I,EAAME,E,EAAI;AACnB;AACA,aAAON,KAAK,CAACO,MAAN,WAAgBL,WAAhB,oBAAqCE,IAArC,sBAAqDE,EAArD,EAAP;AACH;;;iCAEYF,I,EAAME,E,EAAIE,M,EAAQ;AAC3B;AACA,aAAOR,KAAK,CAACS,GAAN,WAAaP,WAAb,oBAAkCE,IAAlC,sBAAkDE,EAAlD,GAAwDE,MAAxD,CAAP;AACH;;;iCAEYJ,I,EAAMI,M,EAAQ;AACvB;AACA,aAAOR,KAAK,CAACU,IAAN,WAAcR,WAAd,oBAAmCE,IAAnC,gBAAoDI,MAApD,CAAP;AACH;;;6BAEQJ,I,EAAMO,Q,EAAS;AACpB,aAAOX,KAAK,CAACK,GAAN,WAAaH,WAAb,oBAAkCE,IAAlC,sBAAkDO,QAAlD,eAAP;AACH;;;oCAEeA,Q,EAAS;AACrB,aAAOX,KAAK,CAACK,GAAN,WAAaH,WAAb,4BAA0CS,QAA1C,sBAAP;AACH;;;4BAEOC,U,EAAYD,Q,EAAUE,I,EAAK;AAC/B,aAAOb,KAAK,CAACK,GAAN,WAAaH,WAAb,oBAAkCU,UAAlC,sBAAwDD,QAAxD,sBAA4EE,IAA5E,EAAP;AACH;;;;;;AAGL,eAAe,IAAIV,iBAAJ,EAAf","sourcesContent":["import axios from 'axios'\r\nimport { API_URL, JPA_API_URL } from '../../Constants'\r\n\r\nclass MentorDataService {\r\n\r\n    retrieveAllMentors(name) {\r\n        //console.log('executed service')\r\n        return axios.get(`${JPA_API_URL}/users/${name}/mentors`);\r\n    }\r\n\r\n    retrieveMentor(name, id) {\r\n        //console.log('executed service')\r\n        return axios.get(`${JPA_API_URL}/users/${name}/mentors/${id}`);\r\n    }\r\n\r\n    deleteMentor(name, id) {\r\n        //console.log('executed service')\r\n        return axios.delete(`${JPA_API_URL}/users/${name}/mentors/${id}`);\r\n    }\r\n\r\n    updateMentor(name, id, mentor) {\r\n        //console.log('executed service')\r\n        return axios.put(`${JPA_API_URL}/users/${name}/mentors/${id}`, mentor);\r\n    }\r\n\r\n    createMentor(name, mentor) {\r\n        //console.log('executed service')\r\n        return axios.post(`${JPA_API_URL}/users/${name}/mentors/`, mentor);\r\n    }\r\n\r\n    isMentor(name, courseId){\r\n        return axios.get(`${JPA_API_URL}/users/${name}/mentors/${courseId}/isMentor`);\r\n    }\r\n\r\n    getActiveMentor(courseId){\r\n        return axios.get(`${JPA_API_URL}/users/mentors/${courseId}/getActiveMentor`);\r\n    }\r\n\r\n    setRate(mentorName, courseId, rate){\r\n        return axios.get(`${JPA_API_URL}/users/${mentorName}/mentors/${courseId}/setRate/${rate}`);\r\n    }\r\n}\r\n\r\nexport default new MentorDataService()"]},"metadata":{},"sourceType":"module"}