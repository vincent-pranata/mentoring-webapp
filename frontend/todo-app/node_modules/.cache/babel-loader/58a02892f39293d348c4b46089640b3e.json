{"ast":null,"code":"import _classCallCheck from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\src\\\\components\\\\todo\\\\JoinGroupComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport GroupService from '../../api/todo/GroupService.js';\nimport CourseDataService from '../../api/todo/CourseDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nvar JoinGroupComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(JoinGroupComponent, _Component);\n\n  function JoinGroupComponent(props) {\n    var _this;\n\n    _classCallCheck(this, JoinGroupComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JoinGroupComponent).call(this, props));\n\n    _this.handleCourseChange = function (e) {\n      var index = e.nativeEvent.target.selectedIndex;\n      var label = e.nativeEvent.target[index].text;\n      var value = e.target.value;\n\n      _this.setState({\n        courseId: value,\n        coursename: label\n      });\n    };\n\n    _this.handleGroupChange = function (e) {\n      var index = e.nativeEvent.target.selectedIndex;\n      var label = e.nativeEvent.target[index].text;\n      var value = e.target.value;\n\n      _this.setState({\n        numberOfMember: value,\n        groupName: label\n      });\n    };\n\n    _this.state = {\n      courses: [],\n      groups: [],\n      id: _this.props.match.params.id,\n      groupName: '',\n      courseId: '',\n      courseName: '',\n      numberOfMember: '',\n      startDate: ''\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(JoinGroupComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var username = AuthenticationService.getLoggedInUserName();\n      CourseDataService.retrieveAllCourses(username).then(function (response) {\n        return _this2.setState({\n          courses: response.data\n        });\n      });\n\n      if (this.state.courseId != \"\") {\n        GroupService.getActiveGroups(this.state.courseId).then(function (response) {\n          return _this2.setState({\n            groups: response.data\n          });\n        });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(values) {\n      var errors = {};\n\n      if (!values.groupName) {\n        errors.groupName = 'Select a Group';\n      }\n\n      if (!values.courseName) {\n        errors.courseId = 'Select a Course ';\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"onBlurCourse\",\n    value: function onBlurCourse() {\n      var username = AuthenticationService.getLoggedInUserName(); // MenteeDataService.checkMentee(username, this.state.courseId)\n      // .then(response => this.setState({isMentee: response.data})\n      //     )\n\n      this.componentDidMount();\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this3 = this;\n\n      var username = AuthenticationService.getLoggedInUserName();\n      var group = {\n        id: this.state.id,\n        groupName: values.groupName,\n        courseId: values.courseId,\n        courseName: values.courseName,\n        numberOfMember: this.state.numberOfMember\n      };\n      console.log(group);\n      GroupService.createGroup(username, group).then(function () {\n        return _this3.props.history.push('/groups');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          groupName = _this$state.groupName,\n          courseName = _this$state.courseName;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Study Group Application\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: {\n          groupName: groupName,\n          courseName: courseName\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(ErrorMessage, {\n          name: \"groupName\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"courseId\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"courseName\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"numberOfMember\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"Course\"), React.createElement(\"select\", {\n          className: \"form-control\",\n          onChange: _this4.handleCourseChange.bind(_this4),\n          onBlur: _this4.onBlurCourse.bind(_this4),\n          value: _this4.state.courseId,\n          name: \"courseId\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, \"Select a course\"), _this4.state.courses.map(function (course) {\n          return React.createElement(\"option\", {\n            key: course.id,\n            value: course.courseId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, course.coursename);\n        }))), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \"Group\"), React.createElement(\"select\", {\n          className: \"form-control\" // create new methods for onchange n onblur\n          ,\n          onChange: _this4.handleGroupChange.bind(_this4),\n          value: _this4.state.group,\n          name: \"mentor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \"Select a group\"), _this4.state.groups.map(function (group) {\n          return React.createElement(\"option\", {\n            key: group.id,\n            value: group.numberOfMember,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, group.groupName);\n        }))), React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, \"Join\"));\n      })));\n    }\n  }]);\n\n  return JoinGroupComponent;\n}(Component);\n\nexport default JoinGroupComponent;","map":{"version":3,"sources":["E:\\Bachelor of Computer Science\\3rd Semester\\Software Engineering - Process & Tools\\SEPTOne\\frontend\\todo-app\\src\\components\\todo\\JoinGroupComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","GroupService","CourseDataService","AuthenticationService","JoinGroupComponent","props","handleCourseChange","e","index","nativeEvent","target","selectedIndex","label","text","value","setState","courseId","coursename","handleGroupChange","numberOfMember","groupName","state","courses","groups","id","match","params","courseName","startDate","onSubmit","bind","validate","username","getLoggedInUserName","retrieveAllCourses","then","response","data","getActiveGroups","values","errors","componentDidMount","group","console","log","createGroup","history","push","onBlurCourse","map","course"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport GroupService from '../../api/todo/GroupService.js'\r\nimport CourseDataService from '../../api/todo/CourseDataService.js'\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\nclass JoinGroupComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            courses: [],\r\n            groups: [],\r\n            id: this.props.match.params.id,\r\n            groupName:'',\r\n            courseId: '',\r\n            courseName: '',\r\n            numberOfMember:'',\r\n            startDate:''\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n        CourseDataService.retrieveAllCourses(username) \r\n        .then(response => this.setState({courses: response.data})\r\n        )\r\n\r\n        if(this.state.courseId!=\"\")\r\n        {\r\n            GroupService.getActiveGroups(this.state.courseId)\r\n            .then(response => this.setState({groups:response.data})\r\n                )   \r\n        }\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {} \r\n        if (!values.groupName) {\r\n            errors.groupName = 'Select a Group'\r\n        }\r\n        if (!values.courseName) {\r\n            errors.courseId = 'Select a Course '\r\n        }\r\n\r\n        return errors\r\n\r\n    }\r\n    \r\n    onBlurCourse() {\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n        \r\n        // MenteeDataService.checkMentee(username, this.state.courseId)\r\n        // .then(response => this.setState({isMentee: response.data})\r\n        //     )\r\n\r\n        this.componentDidMount();\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n\r\n        let group = {\r\n            id: this.state.id,\r\n            groupName: values.groupName,\r\n            courseId: values.courseId,\r\n            courseName: values.courseName,\r\n            numberOfMember: this.state.numberOfMember\r\n        }\r\n        console.log(group)\r\n        GroupService.createGroup(username, group)\r\n            .then(() => this.props.history.push('/groups'))\r\n    }\r\n\r\n    handleCourseChange = (e) => {\r\n        let index = e.nativeEvent.target.selectedIndex;\r\n        let label = e.nativeEvent.target[index].text;\r\n        let value = e.target.value;\r\n\r\n        this.setState({\r\n            courseId:value, coursename:label});\r\n    };\r\n\r\n    handleGroupChange = (e) => {\r\n        let index = e.nativeEvent.target.selectedIndex;\r\n        let label = e.nativeEvent.target[index].text;\r\n        let value = e.target.value;\r\n\r\n        this.setState({numberOfMember:value, groupName:label});\r\n    };\r\n    \r\n    render() {\r\n\r\n        let { groupName,courseName } = this.state\r\n        \r\n        return (\r\n            <div>\r\n                <h1>Study Group Application</h1>\r\n                <div className=\"container\">\r\n                    <Formik\r\n                        initialValues={{ groupName,courseName}}\r\n                        onSubmit={this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                            (props) => (\r\n                                <Form>\r\n                                    <ErrorMessage name=\"groupName\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"courseId\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"courseName\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"numberOfMember\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Course</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            onChange={this.handleCourseChange.bind(this)}\r\n                                            onBlur={this.onBlurCourse.bind(this)}\r\n                                            value={this.state.courseId}\r\n                                            name=\"courseId\"\r\n                                        >\r\n                                            <option value=''>Select a course</option>\r\n                                            {\r\n                                                this.state.courses.map(\r\n                                                    course =>\r\n                                                        <option key={course.id} value={course.courseId}>{course.coursename}</option>\r\n                                                )\r\n                                            }\r\n                                        </select>\r\n                                    </fieldset>\r\n                                     <fieldset className=\"form-group\">\r\n                                        <label>Group</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            // create new methods for onchange n onblur\r\n                                            onChange={this.handleGroupChange.bind(this)}\r\n                                            value={this.state.group}\r\n                                            name=\"mentor\"\r\n                                        >\r\n                                            <option value=''>Select a group</option>\r\n                                            {\r\n                                                this.state.groups.map(\r\n                                                    group =>\r\n                                                        <option key={group.id} value={group.numberOfMember}>{group.groupName}</option>\r\n                                                )\r\n                                            }\r\n                                        </select>\r\n                                    </fieldset>\r\n                                    <button className=\"btn btn-success\" type=\"submit\">Join</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JoinGroupComponent"]},"metadata":{},"sourceType":"module"}