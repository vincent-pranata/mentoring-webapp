{"ast":null,"code":"import _classCallCheck from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\src\\\\components\\\\todo\\\\MentorComponent.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport CourseDataService from '../../api/todo/CourseDataService.js';\nimport MentorDataService from '../../api/todo/MentorDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport Select from 'react-select';\n\nvar MentorComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MentorComponent, _Component);\n\n  function MentorComponent(props) {\n    var _this;\n\n    _classCallCheck(this, MentorComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MentorComponent).call(this, props));\n\n    _this.handleChange = function (courseId) {\n      _this.setState({\n        courseId: courseId\n      });\n    };\n\n    _this.state = {\n      courses: [],\n      id: _this.props.match.params.id,\n      courseId: null,\n      coursename: '',\n      targetDate: moment(new Date()).format('YYYY-MM-DD')\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.refreshOptions = _this.refreshOptions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MentorComponent, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log('componentWillUnmount');\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      console.log('shouldComponentUpdate');\n      console.log(nextProps);\n      console.log(nextState);\n      return true;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.refreshOptions();\n      console.log(this.state);\n    }\n  }, {\n    key: \"refreshOptions\",\n    value: function refreshOptions() {\n      var _this2 = this;\n\n      var username = AuthenticationService.getLoggedInUserName();\n      CourseDataService.retrieveAllCourses(username).then(function (response) {\n        //console.log(response);\n        _this2.setState({\n          courses: response.data\n        });\n\n        return response;\n      }).then(function (data) {\n        _this2.state.courses = data.results.map(function (course) {\n          return course;\n        });\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(values) {\n      var errors = {};\n\n      if (!values.courseId.value) {\n        errors.courseId = 'Enter Course ID';\n      } // if (!values.courseName) {\n      //     errors.courseName = 'Enter Course Name'\n      // }\n\n\n      return errors;\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this3 = this;\n\n      var username = AuthenticationService.getLoggedInUserName();\n      var mentor = {\n        id: this.state.id,\n        courseId: values.courseId.value,\n        courseName: values.courseId.label,\n        startdate: values.startdate\n      };\n\n      if (this.state.id === -1) {\n        MentorDataService.createMentor(username, mentor).then(function () {\n          return _this3.props.history.push('/mentors');\n        });\n      } else {\n        MentorDataService.updateMentor(username, this.state.id, mentor).then(function () {\n          return _this3.props.history.push('/mentors');\n        });\n      }\n\n      console.log(values);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var options = courses.map(function (course) {\n        return React.createElement(\"option\", {\n          key: course.id,\n          value: course.courseId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, course.coursename);\n      });\n      var _this$state = this.state,\n          courseId = _this$state.courseId,\n          startdate = _this$state.startdate;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Mentor Application\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: {\n          courseId: courseId,\n          startdate: startdate\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(ErrorMessage, {\n          name: \"courseId\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"courseName\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"startdate\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Course ID\"), React.createElement(Select, {\n          value: courseId,\n          onChange: _this4.handleChange,\n          options: options,\n          name: \"courseId\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, options)), React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"Apply\"));\n      })));\n    }\n  }]);\n\n  return MentorComponent;\n}(Component);\n\nexport default MentorComponent;","map":{"version":3,"sources":["E:\\Bachelor of Computer Science\\3rd Semester\\Software Engineering - Process & Tools\\SEPTOne\\frontend\\todo-app\\src\\components\\todo\\MentorComponent.jsx"],"names":["React","Component","moment","Formik","Form","Field","ErrorMessage","CourseDataService","MentorDataService","AuthenticationService","Select","MentorComponent","props","handleChange","courseId","setState","state","courses","id","match","params","coursename","targetDate","Date","format","onSubmit","bind","validate","refreshOptions","console","log","nextProps","nextState","username","getLoggedInUserName","retrieveAllCourses","then","response","data","results","map","course","values","errors","value","mentor","courseName","label","startdate","createMentor","history","push","updateMentor","options"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport CourseDataService from '../../api/todo/CourseDataService.js'\r\nimport MentorDataService from '../../api/todo/MentorDataService.js'\r\nimport AuthenticationService from './AuthenticationService.js'\r\nimport Select from 'react-select';\r\n\r\nclass MentorComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            courses: [],\r\n            id: this.props.match.params.id,\r\n            courseId: null,\r\n            coursename: '',\r\n            targetDate: moment(new Date()).format('YYYY-MM-DD')\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.refreshOptions = this.refreshOptions.bind(this)\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        console.log('componentWillUnmount')\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log('shouldComponentUpdate')\r\n        console.log(nextProps)\r\n        console.log(nextState)\r\n        return true\r\n    }\r\n    componentDidMount() {\r\n\r\n        this.refreshOptions();\r\n        console.log(this.state)\r\n    }\r\n\r\n    refreshOptions() {\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n        CourseDataService.retrieveAllCourses(username)\r\n            .then(\r\n                response => {\r\n                    //console.log(response);\r\n                    this.setState({ courses: response.data })\r\n                    return response;\r\n                }\r\n            ).then(\r\n                data => {\r\n                    this.state.courses = data.results.map((course) => {\r\n                        return course\r\n                    });\r\n                });\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.courseId.value) {\r\n            errors.courseId = 'Enter Course ID'\r\n        }\r\n\r\n        // if (!values.courseName) {\r\n        //     errors.courseName = 'Enter Course Name'\r\n        // }\r\n\r\n        return errors\r\n\r\n    }\r\n\r\n    handleChange = courseId => {\r\n        this.setState({ courseId });\r\n    };\r\n\r\n    onSubmit(values) {\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n\r\n        let mentor = {\r\n            id: this.state.id,\r\n            courseId: values.courseId.value,\r\n            courseName: values.courseId.label,\r\n            startdate: values.startdate\r\n        }\r\n        \r\n        if (this.state.id === -1) {\r\n            MentorDataService.createMentor(username, mentor)\r\n                .then(() => this.props.history.push('/mentors'))\r\n        } else {\r\n            MentorDataService.updateMentor(username, this.state.id, mentor)\r\n                .then(() => this.props.history.push('/mentors'))\r\n        }\r\n\r\n        console.log(values);\r\n    }\r\n\r\n    render() {\r\n\r\n        let options = courses.map((course) =>\r\n                <option key={course.id} value={course.courseId}>{course.coursename}</option>\r\n            );\r\n\r\n        let { courseId,startdate } = this.state\r\n        \r\n        return (\r\n            <div>\r\n                <h1>Mentor Application</h1>\r\n                <div className=\"container\">\r\n                    <Formik\r\n                        initialValues={{ courseId,startdate }}\r\n                        onSubmit={this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                            (props) => (\r\n                                <Form>\r\n                                    <ErrorMessage name=\"courseId\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"courseName\" component=\"div\"\r\n                                    className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"startdate\" component=\"div\"\r\n                                    className=\"alert alert-warning\" />\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Course ID</label>\r\n                                        <Select \r\n                                            value={courseId}\r\n                                            onChange={this.handleChange}\r\n                                            options={options}\r\n                                            name=\"courseId\"\r\n                                        >\r\n                                            {options}\r\n                                        </Select>\r\n                                    </fieldset>\r\n                                    <button className=\"btn btn-success\" type=\"submit\">Apply</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MentorComponent"]},"metadata":{},"sourceType":"module"}