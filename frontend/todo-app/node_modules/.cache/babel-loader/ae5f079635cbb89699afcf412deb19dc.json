{"ast":null,"code":"import _classCallCheck from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport { API_URL, JPA_API_URL } from '../../Constants';\n\nvar CourseDataService =\n/*#__PURE__*/\nfunction () {\n  function CourseDataService() {\n    _classCallCheck(this, CourseDataService);\n  }\n\n  _createClass(CourseDataService, [{\n    key: \"retrieveAllCourses\",\n    //get a list of courses from backend\n    value: function retrieveAllCourses(name) {\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/courses\"));\n    } //get a course from backend\n\n  }, {\n    key: \"retrieveCourse\",\n    value: function retrieveCourse(name, id) {\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/courses/\").concat(id));\n    } //delete a course for backend\n\n  }, {\n    key: \"deleteCourse\",\n    value: function deleteCourse(name, id) {\n      return axios.delete(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/courses/\").concat(id));\n    } //update a course from backend\n\n  }, {\n    key: \"updateCourse\",\n    value: function updateCourse(name, id, course) {\n      return axios.put(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/courses/\").concat(id), course);\n    } //creates a new course for backend\n\n  }, {\n    key: \"createCourse\",\n    value: function createCourse(name, course) {\n      return axios.post(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/courses/\"), course);\n    } //check grade in backend and get boolean\n\n  }, {\n    key: \"checkGrade\",\n    value: function checkGrade(name, id) {\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/courses/\").concat(id, \"/grade\"));\n    } //check if courses added in backend and get boolean\n\n  }, {\n    key: \"checkCourse\",\n    value: function checkCourse(name, courseId) {\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/courses/\").concat(courseId, \"/checkExistingCourse\"));\n    }\n  }]);\n\n  return CourseDataService;\n}();\n\nexport default new CourseDataService();","map":{"version":3,"sources":["E:\\Bachelor of Computer Science\\3rd Semester\\Software Engineering - Process & Tools\\SEPTOne\\frontend\\todo-app\\src\\api\\todo\\CourseDataService.js"],"names":["axios","API_URL","JPA_API_URL","CourseDataService","name","get","id","delete","course","put","post","courseId"],"mappings":";;AAAC,OAAOA,KAAP,MAAkB,OAAlB;AACD,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,iBAArC;;IAEMC,iB;;;;;;;;;AAEF;uCACmBC,I,EAAM;AACrB,aAAOJ,KAAK,CAACK,GAAN,WAAaH,WAAb,oBAAkCE,IAAlC,cAAP;AACH,K,CAED;;;;mCACeA,I,EAAME,E,EAAI;AACrB,aAAON,KAAK,CAACK,GAAN,WAAaH,WAAb,oBAAkCE,IAAlC,sBAAkDE,EAAlD,EAAP;AACH,K,CAED;;;;iCACaF,I,EAAME,E,EAAI;AACnB,aAAON,KAAK,CAACO,MAAN,WAAgBL,WAAhB,oBAAqCE,IAArC,sBAAqDE,EAArD,EAAP;AACH,K,CAED;;;;iCACaF,I,EAAME,E,EAAIE,M,EAAQ;AAC3B,aAAOR,KAAK,CAACS,GAAN,WAAaP,WAAb,oBAAkCE,IAAlC,sBAAkDE,EAAlD,GAAwDE,MAAxD,CAAP;AACH,K,CAED;;;;iCACaJ,I,EAAMI,M,EAAQ;AACvB,aAAOR,KAAK,CAACU,IAAN,WAAcR,WAAd,oBAAmCE,IAAnC,gBAAoDI,MAApD,CAAP;AACH,K,CAED;;;;+BACWJ,I,EAAME,E,EAAI;AACjB,aAAON,KAAK,CAACK,GAAN,WAAaH,WAAb,oBAAkCE,IAAlC,sBAAkDE,EAAlD,YAAP;AACH,K,CAED;;;;gCACYF,I,EAAMO,Q,EAAU;AACxB,aAAOX,KAAK,CAACK,GAAN,WAAaH,WAAb,oBAAkCE,IAAlC,sBAAkDO,QAAlD,0BAAP;AACH;;;;;;AAGL,eAAe,IAAIR,iBAAJ,EAAf","sourcesContent":[" import axios from 'axios'\r\nimport { API_URL, JPA_API_URL } from '../../Constants'\r\n\r\nclass CourseDataService {\r\n\r\n    //get a list of courses from backend\r\n    retrieveAllCourses(name) {\r\n        return axios.get(`${JPA_API_URL}/users/${name}/courses`);\r\n    }\r\n\r\n    //get a course from backend\r\n    retrieveCourse(name, id) {\r\n        return axios.get(`${JPA_API_URL}/users/${name}/courses/${id}`);\r\n    }\r\n\r\n    //delete a course for backend\r\n    deleteCourse(name, id) {\r\n        return axios.delete(`${JPA_API_URL}/users/${name}/courses/${id}`);\r\n    }\r\n\r\n    //update a course from backend\r\n    updateCourse(name, id, course) {\r\n        return axios.put(`${JPA_API_URL}/users/${name}/courses/${id}`, course);\r\n    }\r\n\r\n    //creates a new course for backend\r\n    createCourse(name, course) {\r\n        return axios.post(`${JPA_API_URL}/users/${name}/courses/`, course);\r\n    }\r\n    \r\n    //check grade in backend and get boolean\r\n    checkGrade(name, id) {\r\n        return axios.get(`${JPA_API_URL}/users/${name}/courses/${id}/grade`);\r\n    }\r\n\r\n    //check if courses added in backend and get boolean\r\n    checkCourse(name, courseId) {\r\n        return axios.get(`${JPA_API_URL}/users/${name}/courses/${courseId}/checkExistingCourse`);\r\n    }\r\n}\r\n\r\nexport default new CourseDataService()"]},"metadata":{},"sourceType":"module"}