{"ast":null,"code":"import _classCallCheck from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\src\\\\components\\\\todo\\\\MenteeUpdateComponent.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport MenteeDataService from '../../api/todo/MenteeDataService.js';\nimport CourseDataService from '../../api/todo/CourseDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nvar MenteeUpdateComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MenteeUpdateComponent, _Component);\n\n  function MenteeUpdateComponent(props) {\n    var _this;\n\n    _classCallCheck(this, MenteeUpdateComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MenteeUpdateComponent).call(this, props));\n\n    _this.handleChange = function (e) {\n      var index = e.nativeEvent.target.selectedIndex;\n      var label = e.nativeEvent.target[index].text;\n      var value = e.target.value;\n\n      _this.setState({\n        courseId: value,\n        courseName: label\n      });\n    };\n\n    _this.state = {\n      courses: [],\n      id: _this.props.match.params.id,\n      courseId: '',\n      courseName: '',\n      mentorDate: moment(new Date()).format('YYYY-MM-DD'),\n      isCompleted: '',\n      mentorID: '',\n      mentorEmail: '',\n      mentorName: ''\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MenteeUpdateComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var username = AuthenticationService.getLoggedInUserName(); //get list of courses\n\n      CourseDataService.retrieveAllCourses(username).then(function (response) {\n        return _this2.setState({\n          courses: response.data\n        });\n      }); //get and set mentee's detail\n\n      MenteeDataService.retrieveMentee(username, this.state.id).then(function (response) {\n        return _this2.setState({\n          courseId: response.data.courseId,\n          courseName: response.data.courseName,\n          mentorDate: moment(response.data.mentorDate).format('YYYY-MM-DD'),\n          mentorID: response.data.mentorID,\n          mentorEmail: response.data.mentorEmail,\n          mentorName: response.data.mentorName\n        });\n      });\n    } //validate the inputs\n\n  }, {\n    key: \"validate\",\n    value: function validate(values) {\n      var errors = {};\n\n      if (!values.courseId) {\n        errors.courseId = 'Select a Course ID';\n      }\n\n      if (!moment(values.mentorDate).isValid()) {\n        errors.mentorDate = 'Enter a valid Mentoring Date';\n      }\n\n      if (values.isCompleted != 'false' && values.isCompleted != 'true') {\n        errors.isCompleted = 'Please select a status for is completed';\n      }\n\n      return errors;\n    } //get value of radio button\n\n  }, {\n    key: \"getRadioVal\",\n    value: function getRadioVal(form, name) {\n      var val; // get list of radio buttons with specified name\n\n      var radios = form.elements[name]; // loop through list of radio buttons\n\n      for (var i = 0, len = radios.length; i < len; i++) {\n        if (radios[i].checked) {\n          // radio checked?\n          val = radios[i].value; // if it is, hold its value in val\n\n          break; // and break out of for loop\n        }\n      }\n\n      return val; // return value of checked radio or undefined if none checked\n    } //handle changes for select course\n\n  }, {\n    key: \"onSubmit\",\n    //what happen when submitted\n    value: function onSubmit(values) {\n      var _this3 = this;\n\n      var val = this.getRadioVal(document.getElementById('updatementee'), 'isCompleted');\n      var username = AuthenticationService.getLoggedInUserName();\n      var mentee = {\n        id: this.state.id,\n        courseId: values.courseId,\n        courseName: values.courseName,\n        mentorDate: values.mentorDate,\n        isCompleted: val,\n        mentorID: this.state.mentorID,\n        mentorEmail: this.state.mentorEmail,\n        mentorName: this.state.mentorName\n      };\n\n      if (this.state.id === -1) {\n        MenteeDataService.createMentee(username, mentee).then(function () {\n          return _this3.props.history.push('/mentees');\n        });\n      } else {\n        MenteeDataService.updateMentee(username, this.state.id, mentee).then(function () {\n          return _this3.props.history.push('/mentees');\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          courseId = _this$state.courseId,\n          courseName = _this$state.courseName,\n          mentorDate = _this$state.mentorDate,\n          isCompleted = _this$state.isCompleted;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Mentee Application\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: {\n          courseId: courseId,\n          courseName: courseName,\n          mentorDate: mentorDate,\n          isCompleted: isCompleted\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(Form, {\n          class: \"updatementee\",\n          id: \"updatementee\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(ErrorMessage, {\n          name: \"courseId\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"courseName\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"mentorDate\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"isCompleted\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"Course\"), React.createElement(\"select\", {\n          className: \"form-control\",\n          onChange: _this4.handleChange.bind(_this4),\n          value: _this4.state.courseId,\n          name: \"courseId\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \"Select a course\"), _this4.state.courses.map(function (course) {\n          return React.createElement(\"option\", {\n            key: course.id,\n            value: course.courseId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, course.coursename);\n        }))), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \"Mentoring Date\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"date\",\n          name: \"mentorDate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, \"Is Completed\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }), React.createElement(Field, {\n          type: \"radio\",\n          name: \"isCompleted\",\n          value: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }), \" True \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }), React.createElement(Field, {\n          type: \"radio\",\n          name: \"isCompleted\",\n          value: \"false\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }), \" False\"), React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, \"Apply\"));\n      })));\n    }\n  }]);\n\n  return MenteeUpdateComponent;\n}(Component);\n\nexport default MenteeUpdateComponent;","map":{"version":3,"sources":["E:\\Bachelor of Computer Science\\3rd Semester\\Software Engineering - Process & Tools\\SEPTOne\\frontend\\todo-app\\src\\components\\todo\\MenteeUpdateComponent.jsx"],"names":["React","Component","moment","Formik","Form","Field","ErrorMessage","MenteeDataService","CourseDataService","AuthenticationService","MenteeUpdateComponent","props","handleChange","e","index","nativeEvent","target","selectedIndex","label","text","value","setState","courseId","courseName","state","courses","id","match","params","mentorDate","Date","format","isCompleted","mentorID","mentorEmail","mentorName","onSubmit","bind","validate","username","getLoggedInUserName","retrieveAllCourses","then","response","data","retrieveMentee","values","errors","isValid","form","name","val","radios","elements","i","len","length","checked","getRadioVal","document","getElementById","mentee","createMentee","history","push","updateMentee","map","course","coursename"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport MenteeDataService from '../../api/todo/MenteeDataService.js'\r\nimport CourseDataService from '../../api/todo/CourseDataService.js'\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\nclass MenteeUpdateComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            courses: [],\r\n            id: this.props.match.params.id,\r\n            courseId: '',\r\n            courseName: '',\r\n            mentorDate: moment(new Date()).format('YYYY-MM-DD'),\r\n            isCompleted: '',\r\n            mentorID:'',\r\n            mentorEmail:'',\r\n            mentorName:''\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n\r\n        //get list of courses\r\n        CourseDataService.retrieveAllCourses(username) \r\n            .then(response => this.setState({courses: response.data})\r\n            )\r\n\r\n        //get and set mentee's detail\r\n        MenteeDataService.retrieveMentee(username, this.state.id)\r\n            .then(response => this.setState({\r\n                courseId: response.data.courseId,\r\n                courseName: response.data.courseName,\r\n                mentorDate: moment(response.data.mentorDate).format('YYYY-MM-DD'),\r\n                mentorID: response.data.mentorID,\r\n                mentorEmail: response.data.mentorEmail,\r\n                mentorName: response.data.mentorName\r\n            }))\r\n    }\r\n\r\n    //validate the inputs\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.courseId) {\r\n            errors.courseId = 'Select a Course ID'\r\n        }\r\n        if (!moment(values.mentorDate).isValid()) {\r\n            errors.mentorDate = 'Enter a valid Mentoring Date'\r\n        }\r\n\r\n        if(values.isCompleted!='false' && values.isCompleted!='true'){\r\n            errors.isCompleted = 'Please select a status for is completed'\r\n        }\r\n\r\n        return errors\r\n    }\r\n\r\n    //get value of radio button\r\n    getRadioVal(form, name) {\r\n        var val;\r\n        // get list of radio buttons with specified name\r\n        var radios = form.elements[name];\r\n        \r\n        // loop through list of radio buttons\r\n        for (var i=0, len=radios.length; i<len; i++) {\r\n            if ( radios[i].checked ) { // radio checked?\r\n                val = radios[i].value; // if it is, hold its value in val\r\n                break; // and break out of for loop\r\n            }\r\n        }\r\n        return val; // return value of checked radio or undefined if none checked\r\n    }\r\n\r\n    //handle changes for select course\r\n    handleChange = (e) => {\r\n        let index = e.nativeEvent.target.selectedIndex;\r\n        let label = e.nativeEvent.target[index].text;\r\n        let value = e.target.value;\r\n\r\n        this.setState({\r\n            courseId:value, courseName:label});\r\n    };\r\n\r\n    //what happen when submitted\r\n    onSubmit(values) {\r\n        var val = this.getRadioVal(document.getElementById('updatementee'), 'isCompleted')\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n        let mentee = {\r\n            id: this.state.id,\r\n            courseId: values.courseId,\r\n            courseName: values.courseName,\r\n            mentorDate: values.mentorDate,\r\n            isCompleted: val,\r\n            mentorID:this.state.mentorID,\r\n            mentorEmail: this.state.mentorEmail,\r\n            mentorName: this.state.mentorName\r\n        }\r\n\r\n        if (this.state.id === -1) {\r\n            MenteeDataService.createMentee(username, mentee)\r\n                .then(() => this.props.history.push('/mentees'))\r\n        } else {\r\n            MenteeDataService.updateMentee(username, this.state.id, mentee)\r\n                .then(() => this.props.history.push('/mentees'))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { courseId, courseName,mentorDate, isCompleted} = this.state\r\n        \r\n        return (\r\n            <div>\r\n                <h1>Mentee Application</h1>\r\n                <div className=\"container\">\r\n                    <Formik\r\n                        initialValues={{ courseId,courseName,mentorDate, isCompleted}}\r\n                        onSubmit={this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                            (props) => (\r\n                                <Form class='updatementee' id='updatementee'>\r\n                                    <ErrorMessage name=\"courseId\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"courseName\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"mentorDate\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"isCompleted\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Course</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            value={this.state.courseId}\r\n                                            name=\"courseId\"\r\n                                        >\r\n                                            <option value=''>Select a course</option>\r\n                                            {\r\n                                                this.state.courses.map(\r\n                                                    course =>\r\n                                                        <option key={course.id} value={course.courseId}>{course.coursename}</option>\r\n                                                )\r\n                                            }\r\n                                        </select>\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Mentoring Date</label>\r\n                                        <Field className=\"form-control\" type=\"date\" name=\"mentorDate\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Is Completed</label><br/>\r\n                                        <Field type=\"radio\" name=\"isCompleted\" value=\"true\"/> True <br/> \r\n                                        <Field type=\"radio\" name=\"isCompleted\" value=\"false\"/> False\r\n                                    </fieldset>\r\n                                    <button className=\"btn btn-success\" type=\"submit\">Apply</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenteeUpdateComponent"]},"metadata":{},"sourceType":"module"}