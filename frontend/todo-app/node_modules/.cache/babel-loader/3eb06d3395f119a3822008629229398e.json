{"ast":null,"code":"import _classCallCheck from \"/Users/guoxinshan/Documents/projects/SEPT/SEPTOne/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/guoxinshan/Documents/projects/SEPT/SEPTOne/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/guoxinshan/Documents/projects/SEPT/SEPTOne/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/guoxinshan/Documents/projects/SEPT/SEPTOne/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/guoxinshan/Documents/projects/SEPT/SEPTOne/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/guoxinshan/Documents/projects/SEPT/SEPTOne/frontend/todo-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/guoxinshan/Documents/projects/SEPT/SEPTOne/frontend/todo-app/src/components/todo/ListCoursesComponent.jsx\";\nimport React, { Component } from 'react';\nimport CourseDataService from '../../api/todo/CourseDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nvar ListCoursesComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListCoursesComponent, _Component);\n\n  function ListCoursesComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ListCoursesComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListCoursesComponent).call(this, props));\n    _this.state = {\n      courses: [],\n      message: null\n    };\n    _this.deleteCourseClicked = _this.deleteCourseClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateCourseClicked = _this.updateCourseClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addCourseClicked = _this.addCourseClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.refreshCourses = _this.refreshCourses.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ListCoursesComponent, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return true;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.refreshCourses();\n    } //reset the page wheter something is added, updated or deleted\n\n  }, {\n    key: \"refreshCourses\",\n    value: function refreshCourses() {\n      var _this2 = this;\n\n      //get the list of courses and set it to an array\n      var username = AuthenticationService.getLoggedInUserName();\n      CourseDataService.retrieveAllCourses(username).then(function (response) {\n        _this2.setState({\n          courses: response.data\n        });\n      });\n    } //what happen when delete button is clicked\n\n  }, {\n    key: \"deleteCourseClicked\",\n    value: function deleteCourseClicked(id) {\n      var _this3 = this;\n\n      var username = AuthenticationService.getLoggedInUserName();\n      CourseDataService.deleteCourse(username, id).then(function (response) {\n        _this3.setState({\n          message: \"Delete of course \".concat(id, \" Successful\")\n        });\n\n        _this3.refreshCourses();\n      });\n    } //what happen when add button is clicked\n\n  }, {\n    key: \"addCourseClicked\",\n    value: function addCourseClicked() {\n      this.props.history.push(\"/courses/-1\");\n    } //what happen when update button is clicked\n\n  }, {\n    key: \"updateCourseClicked\",\n    value: function updateCourseClicked(id) {\n      this.props.history.push(\"/update/courses/\".concat(id));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Courses List\"), this.state.message && React.createElement(\"div\", {\n        class: \"alert alert-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.message), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Course ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Course Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"IsCompleted?\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Grade\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Update\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Delete\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.state.courses.map(function (course) {\n        return React.createElement(\"tr\", {\n          key: course.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, course.courseId), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, course.coursename), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, course.completed.toString()), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, course.grade), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          onClick: function onClick() {\n            return _this4.updateCourseClicked(course.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Update\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: function onClick() {\n            return _this4.deleteCourseClicked(course.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Delete\")));\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.addCourseClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Add\"))));\n    }\n  }]);\n\n  return ListCoursesComponent;\n}(Component);\n\nexport default ListCoursesComponent;","map":{"version":3,"sources":["/Users/guoxinshan/Documents/projects/SEPT/SEPTOne/frontend/todo-app/src/components/todo/ListCoursesComponent.jsx"],"names":["React","Component","CourseDataService","AuthenticationService","ListCoursesComponent","props","state","courses","message","deleteCourseClicked","bind","updateCourseClicked","addCourseClicked","refreshCourses","nextProps","nextState","username","getLoggedInUserName","retrieveAllCourses","then","response","setState","data","id","deleteCourse","history","push","map","course","courseId","coursename","completed","toString","grade"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CourseDataService from '../../api/todo/CourseDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass ListCoursesComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            courses: [],\n            message: null\n        }\n        this.deleteCourseClicked = this.deleteCourseClicked.bind(this)\n        this.updateCourseClicked = this.updateCourseClicked.bind(this)\n        this.addCourseClicked = this.addCourseClicked.bind(this)\n        this.refreshCourses = this.refreshCourses.bind(this)\n    }\n\n    componentWillUnmount() {\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return true\n    }\n\n    componentDidMount() {\n        this.refreshCourses();\n    }\n\n    //reset the page wheter something is added, updated or deleted\n    refreshCourses() {\n        //get the list of courses and set it to an array\n        let username = AuthenticationService.getLoggedInUserName()\n        CourseDataService.retrieveAllCourses(username)\n            .then(\n                response => {\n                    this.setState({ courses: response.data })\n                }\n            )\n    }\n\n    //what happen when delete button is clicked\n    deleteCourseClicked(id) {\n        let username = AuthenticationService.getLoggedInUserName()\n        CourseDataService.deleteCourse(username, id)\n            .then(\n                response => {\n                    this.setState({ message: `Delete of course ${id} Successful` })\n                    this.refreshCourses()\n                }\n            )\n\n    }\n\n    //what happen when add button is clicked\n    addCourseClicked() {\n        this.props.history.push(`/courses/-1`)\n    }\n\n    //what happen when update button is clicked\n    updateCourseClicked(id) {\n        this.props.history.push(`/update/courses/${id}`)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Courses List</h1>\n                {this.state.message && <div class=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Course ID</th>\n                                <th>Course Name</th>\n                                <th>IsCompleted?</th>\n                                <th>Grade</th>\n                                <th>Update</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.courses.map(\n                                    course =>\n                                        <tr key={course.id}>\n                                            <td>{course.courseId}</td>\n                                            <td>{course.coursename}</td>\n                                            <td>{course.completed.toString()}</td>\n                                            <td>{course.grade}</td>\n                                            <td><button className=\"btn btn-success\" onClick={() => this.updateCourseClicked(course.id)}>Update</button></td>\n                                            <td><button className=\"btn btn-warning\" onClick={() => this.deleteCourseClicked(course.id)}>Delete</button></td>\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.addCourseClicked}>Add</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListCoursesComponent"]},"metadata":{},"sourceType":"module"}