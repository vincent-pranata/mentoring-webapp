{"ast":null,"code":"import _classCallCheck from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\src\\\\components\\\\todo\\\\MentorComponent.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport MentorDataService from '../../api/todo/MentorDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport Select from 'react-select';\nvar options = [{\n  value: 'A1',\n  label: 'A1'\n}, {\n  value: 'A2',\n  label: 'A2'\n}, {\n  value: 'A3',\n  label: 'A3'\n}];\n\nvar MentorComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MentorComponent, _Component);\n\n  function MentorComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MentorComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MentorComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedOption: null\n    };\n\n    _this.handleChange = function (selectedOption) {\n      _this.setState({\n        selectedOption: selectedOption\n      });\n\n      console.log(\"Option selected:\", selectedOption);\n    };\n\n    return _this;\n  }\n\n  _createClass(MentorComponent, [{\n    key: \"render\",\n    value: function render() {\n      var selectedOption = this.state.selectedOption;\n      return React.createElement(Select, {\n        value: selectedOption,\n        onChange: this.handleChange,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MentorComponent;\n}(Component);\n\nexport default MentorComponent;","map":{"version":3,"sources":["E:\\Bachelor of Computer Science\\3rd Semester\\Software Engineering - Process & Tools\\SEPTOne\\frontend\\todo-app\\src\\components\\todo\\MentorComponent.jsx"],"names":["React","Component","moment","Formik","Form","Field","ErrorMessage","MentorDataService","AuthenticationService","Select","options","value","label","MentorComponent","state","selectedOption","handleChange","setState","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,IAAMC,OAAO,GAAG,CACZ;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CADY,EAEZ;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAFY,EAGZ;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAHY,CAAhB;;IAMMC,e;;;;;;;;;;;;;;;;;UAwHNC,K,GAAQ;AACJC,MAAAA,cAAc,EAAE;AADZ,K;;UAGNC,Y,GAAe,UAAAD,cAAc,EAAI;AAC/B,YAAKE,QAAL,CAAc;AAAEF,QAAAA,cAAc,EAAdA;AAAF,OAAd;;AACAG,MAAAA,OAAO,CAACC,GAAR,qBAAgCJ,cAAhC;AACD,K;;;;;;;6BACQ;AAAA,UACCA,cADD,GACoB,KAAKD,KADzB,CACCC,cADD;AAGP,aACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEA,cADT;AAEE,QAAA,QAAQ,EAAE,KAAKC,YAFjB;AAGE,QAAA,OAAO,EAAEN,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMG;;;;EAxIuBT,S;;AA2I9B,eAAeY,eAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport MentorDataService from '../../api/todo/MentorDataService.js'\r\nimport AuthenticationService from './AuthenticationService.js'\r\nimport Select from 'react-select';\r\n\r\nconst options = [\r\n    { value: 'A1', label: 'A1' },\r\n    { value: 'A2', label: 'A2' },\r\n    { value: 'A3', label: 'A3' },\r\n  ];\r\n\r\nclass MentorComponent extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n\r\n//         this.state = {\r\n//             id: this.props.match.params.id,\r\n//             courseId: null,\r\n//             courseName: '',\r\n//             targetDate: moment(new Date()).format('YYYY-MM-DD')\r\n//         }\r\n\r\n//         this.onSubmit = this.onSubmit.bind(this)\r\n//         this.validate = this.validate.bind(this)\r\n\r\n//     }\r\n\r\n//     componentDidMount() {\r\n\r\n//         if (this.state.id === -1) {\r\n//             return\r\n//         }\r\n\r\n//         let username = AuthenticationService.getLoggedInUserName()\r\n\r\n//         MentorDataService.retrieveMentor(username, this.state.id)\r\n//             .then(response => this.setState({\r\n//                 courseId: response.data.courseId,\r\n//                 courseName: response.data.courseName,\r\n//                 startdate:  moment(response.data.startdate).format('YYYY-MM-DD')\r\n//             }))\r\n//     }\r\n\r\n//     validate(values) {\r\n//         let errors = {}\r\n//         if (!values.courseId) {\r\n//             errors.courseId = 'Enter Course ID'\r\n//         }\r\n\r\n//         if (!values.courseName) {\r\n//             errors.courseName = 'Enter Course Name'\r\n//         }\r\n\r\n//         return errors\r\n\r\n//     }\r\n\r\n//     onSubmit(values) {\r\n//         let username = AuthenticationService.getLoggedInUserName()\r\n\r\n//         let mentor = {\r\n//             id: this.state.id,\r\n//             // courseId:'cde',\r\n//             courseId: values.courseId,\r\n//             courseName: values.courseName,\r\n//             startdate: values.startdate\r\n//         }\r\n        \r\n//         if (this.state.id === -1) {\r\n//             MentorDataService.createMentor(username, mentor)\r\n//                 .then(() => this.props.history.push('/mentors'))\r\n//         } else {\r\n//             MentorDataService.updateMentor(username, this.state.id, mentor)\r\n//                 .then(() => this.props.history.push('/mentors'))\r\n//         }\r\n\r\n//         console.log(values);\r\n//     }\r\n\r\n//     handleChange = courseId => {\r\n//         this.setState({ courseId });\r\n//     };\r\n\r\n//     render() {\r\n\r\n//         let { courseId,courseName,startdate } = this.state\r\n        \r\n//         return (\r\n//             <div>\r\n//                 <h1>Mentor Application</h1>\r\n//                 <div className=\"container\">\r\n//                     <Formik\r\n//                         initialValues={{ courseId,courseName,startdate }}\r\n//                         onSubmit={this.onSubmit}\r\n//                         validateOnChange={false}\r\n//                         validateOnBlur={false}\r\n//                         validate={this.validate}\r\n//                         enableReinitialize={true}\r\n//                     >\r\n//                         {\r\n//                             (props) => (\r\n//                                 <Form>\r\n//                                     <ErrorMessage name=\"courseId\" component=\"div\"\r\n//                                         className=\"alert alert-warning\" />\r\n//                                     <ErrorMessage name=\"courseName\" component=\"div\"\r\n//                                     className=\"alert alert-warning\" />\r\n//                                     <ErrorMessage name=\"startdate\" component=\"div\"\r\n//                                     className=\"alert alert-warning\" />\r\n//                                     <fieldset className=\"form-group\">\r\n//                                         <label>Course ID</label>\r\n//                                         <Select \r\n//                                             value={courseId}\r\n//                                             onChange={this.handleChange}\r\n//                                             options={options}\r\n//                                             name=\"courseId\"\r\n//                                             />\r\n//                                     </fieldset>\r\n//                                     <fieldset className=\"form-group\">\r\n//                                         <label>Course Name</label>\r\n//                                         <Field className=\"form-control\" type=\"text\" name=\"courseName\" />\r\n//                                     </fieldset>\r\n//                                     <button className=\"btn btn-success\" type=\"submit\">Apply</button>\r\n//                                 </Form>\r\n//                             )\r\n//                         }\r\n//                     </Formik>\r\n\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n//     }\r\nstate = {\r\n    selectedOption: null,\r\n  };\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption });\r\n    console.log(`Option selected:`, selectedOption);\r\n  };\r\n  render() {\r\n    const { selectedOption } = this.state;\r\n \r\n    return (\r\n      <Select\r\n        value={selectedOption}\r\n        onChange={this.handleChange}\r\n        options={options}\r\n      />\r\n    );}\r\n}\r\n\r\nexport default MentorComponent"]},"metadata":{},"sourceType":"module"}