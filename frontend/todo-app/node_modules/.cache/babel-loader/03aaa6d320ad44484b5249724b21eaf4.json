{"ast":null,"code":"import _defineProperty from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"E:\\\\Bachelor of Computer Science\\\\3rd Semester\\\\Software Engineering - Process & Tools\\\\SEPTOne\\\\frontend\\\\todo-app\\\\src\\\\components\\\\todo\\\\JoinGroupComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport GroupService from '../../api/todo/GroupService.js';\nimport CourseDataService from '../../api/todo/CourseDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nvar JoinGroupComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(JoinGroupComponent, _Component);\n\n  function JoinGroupComponent(props) {\n    var _this;\n\n    _classCallCheck(this, JoinGroupComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JoinGroupComponent).call(this, props));\n\n    _this.handleCourseChange = function (e) {\n      var index = e.nativeEvent.target.selectedIndex;\n      var label = e.nativeEvent.target[index].text;\n      var value = e.target.value;\n\n      _this.setState({\n        courseId: value,\n        courseName: label\n      });\n    };\n\n    _this.handleGroupChange = function (e) {\n      var index = e.nativeEvent.target.selectedIndex;\n      var label = e.nativeEvent.target[index].text;\n      var value = e.target.value;\n\n      _this.setState({\n        groupId: value,\n        groupName: label\n      });\n    };\n\n    _this.state = {\n      courses: [],\n      groups: [],\n      id: _this.props.match.params.id,\n      isJoin: false,\n      groupId: '',\n      groupName: '',\n      courseId: '',\n      courseName: '',\n      members: '',\n      numberOfMember: ''\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(JoinGroupComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var username = AuthenticationService.getLoggedInUserName();\n      CourseDataService.retrieveAllCourses(username).then(function (response) {\n        return _this2.setState({\n          courses: response.data\n        });\n      });\n\n      if (this.state.courseId != \"\") {\n        GroupService.getActiveGroups(this.state.courseId).then(function (response) {\n          return _this2.setState({\n            groups: response.data\n          });\n        });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(values) {\n      var errors = {};\n\n      if (!values.groupName) {\n        errors.groupName = 'Select a Group';\n      }\n\n      if (!values.courseId) {\n        errors.courseId = 'Select a Course';\n      }\n\n      if (this.state.isJoin === true) {\n        errors.courseId = 'You have joined this group';\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"onBlurCourse\",\n    value: function onBlurCourse() {\n      var _this3 = this;\n\n      var username = AuthenticationService.getLoggedInUserName();\n      GroupService.isJoined(username, this.state.courseId).then(function (response) {\n        return _this3.setState({\n          isJoin: response.data\n        });\n      });\n      this.componentDidMount();\n    }\n  }, {\n    key: \"onBlurGroup\",\n    value: function onBlurGroup() {\n      var _this4 = this;\n\n      var username = AuthenticationService.getLoggedInUserName();\n      GroupService.retrieveGroup(username, this.state.groupId).then(function (response) {\n        var _this4$setState;\n\n        return _this4.setState((_this4$setState = {\n          numberOfMember: response.data\n        }, _defineProperty(_this4$setState, \"numberOfMember\", numberOfMember), _defineProperty(_this4$setState, \"members\", response.data.members), _this4$setState));\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this5 = this;\n\n      var username = AuthenticationService.getLoggedInUserName();\n      var group = {\n        id: this.state.id,\n        courseId: values.courseId,\n        courseName: values.courseName,\n        groupName: values.groupName,\n        members: this.state.members + username + ',',\n        numberOfMember: parseInt(this.state.numberOfMember, 10) + 1\n      };\n      GroupService.updateGroup(\" \", group).then(function () {\n        return _this5.props.history.push('/groups');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var _this$state = this.state,\n          groupName = _this$state.groupName,\n          courseId = _this$state.courseId,\n          courseName = _this$state.courseName,\n          numberOfMember = _this$state.numberOfMember;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Study Group Application\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: {\n          groupName: groupName,\n          courseId: courseId,\n          courseName: courseName,\n          numberOfMember: numberOfMember\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(ErrorMessage, {\n          name: \"groupName\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"courseId\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"Course\"), React.createElement(\"select\", {\n          className: \"form-control\",\n          onChange: _this6.handleCourseChange.bind(_this6),\n          onBlur: _this6.onBlurCourse.bind(_this6),\n          value: _this6.state.courseId,\n          name: \"courseId\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, \"Select a course\"), _this6.state.courses.map(function (course) {\n          return React.createElement(\"option\", {\n            key: course.id,\n            value: course.courseId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          }, course.coursename);\n        }))), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, \"Group\"), React.createElement(\"select\", {\n          className: \"form-control\" // create new methods for onchange n onblur\n          ,\n          onChange: _this6.handleGroupChange.bind(_this6),\n          onBlur: _this6.onBlurGroup.bind(_this6),\n          value: _this6.state.group,\n          name: \"mentor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, \"Select a group\"), _this6.state.groups.map(function (group) {\n          return React.createElement(\"option\", {\n            key: group.id,\n            value: group.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }, group.groupName);\n        }))), React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, \"Join\"));\n      })));\n    }\n  }]);\n\n  return JoinGroupComponent;\n}(Component);\n\nexport default JoinGroupComponent;","map":{"version":3,"sources":["E:\\Bachelor of Computer Science\\3rd Semester\\Software Engineering - Process & Tools\\SEPTOne\\frontend\\todo-app\\src\\components\\todo\\JoinGroupComponent.jsx"],"names":["React","Component","Formik","Form","ErrorMessage","GroupService","CourseDataService","AuthenticationService","JoinGroupComponent","props","handleCourseChange","e","index","nativeEvent","target","selectedIndex","label","text","value","setState","courseId","courseName","handleGroupChange","groupId","groupName","state","courses","groups","id","match","params","isJoin","members","numberOfMember","onSubmit","bind","validate","username","getLoggedInUserName","retrieveAllCourses","then","response","data","getActiveGroups","values","errors","isJoined","componentDidMount","retrieveGroup","group","parseInt","updateGroup","history","push","onBlurCourse","map","course","coursename","onBlurGroup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport GroupService from '../../api/todo/GroupService.js'\r\nimport CourseDataService from '../../api/todo/CourseDataService.js'\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\nclass JoinGroupComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            courses: [],\r\n            groups: [],\r\n            id: this.props.match.params.id,\r\n            isJoin: false,\r\n\r\n            groupId:'',\r\n            groupName:'',\r\n            courseId: '',\r\n            courseName: '',\r\n            members:'',\r\n            numberOfMember:''\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n        \r\n        CourseDataService.retrieveAllCourses(username) \r\n        .then(response => this.setState({courses: response.data})\r\n        )\r\n\r\n        if(this.state.courseId!=\"\")\r\n        {\r\n            GroupService.getActiveGroups(this.state.courseId)\r\n            .then(response => this.setState({groups:response.data})\r\n                )   \r\n        }\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {} \r\n        if (!values.groupName) {\r\n            errors.groupName = 'Select a Group'\r\n        }\r\n        if (!values.courseId) {\r\n            errors.courseId = 'Select a Course'\r\n        }\r\n\r\n        if (this.state.isJoin===true) {\r\n            errors.courseId = 'You have joined this group'\r\n        }\r\n\r\n        return errors\r\n\r\n    }\r\n    \r\n    onBlurCourse() {\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n        \r\n        GroupService.isJoined(username, this.state.courseId)\r\n        .then(response => this.setState({isJoin: response.data})\r\n            )\r\n\r\n        this.componentDidMount();\r\n    }\r\n\r\n    onBlurGroup() {\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n        \r\n        GroupService.retrieveGroup(username, this.state.groupId)\r\n        .then(response => this.setState({\r\n            numberOfMember: response.data,numberOfMember,\r\n            members: response.data.members})\r\n        )\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let username = AuthenticationService.getLoggedInUserName()\r\n\r\n        let group = {\r\n            id: this.state.id,\r\n            courseId: values.courseId,\r\n            courseName: values.courseName,\r\n            groupName: values.groupName,\r\n            members: this.state.members+username+',',\r\n            numberOfMember: parseInt(this.state.numberOfMember, 10)+1\r\n        }\r\n\r\n        GroupService.updateGroup(\" \", group)\r\n            .then(() => this.props.history.push('/groups'))\r\n    }\r\n\r\n    handleCourseChange = (e) => {\r\n        let index = e.nativeEvent.target.selectedIndex;\r\n        let label = e.nativeEvent.target[index].text;\r\n        let value = e.target.value;\r\n\r\n        this.setState({\r\n            courseId:value, courseName:label});\r\n    };\r\n\r\n    handleGroupChange = (e) => {\r\n        let index = e.nativeEvent.target.selectedIndex;\r\n        let label = e.nativeEvent.target[index].text;\r\n        let value = e.target.value;\r\n\r\n        this.setState({groupId:value, groupName:label});\r\n    };\r\n    \r\n    render() {\r\n\r\n        let {  groupName,courseId,courseName,numberOfMember} = this.state\r\n        \r\n        return (\r\n            <div>\r\n                <h1>Study Group Application</h1>\r\n                <div className=\"container\">\r\n                    <Formik\r\n                        initialValues={{ groupName,courseId,courseName,numberOfMember}}\r\n                        onSubmit={this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                            (props) => (\r\n                                <Form>\r\n                                    <ErrorMessage name=\"groupName\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"courseId\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Course</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            onChange={this.handleCourseChange.bind(this)}\r\n                                            onBlur={this.onBlurCourse.bind(this)}\r\n                                            value={this.state.courseId}\r\n                                            name=\"courseId\"\r\n                                        >\r\n                                            <option value=''>Select a course</option>\r\n                                            {\r\n                                                this.state.courses.map(\r\n                                                    course =>\r\n                                                        <option key={course.id} value={course.courseId}>{course.coursename}</option>\r\n                                                )\r\n                                            }\r\n                                        </select>\r\n                                    </fieldset>\r\n                                     <fieldset className=\"form-group\">\r\n                                        <label>Group</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            // create new methods for onchange n onblur\r\n                                            onChange={this.handleGroupChange.bind(this)}\r\n                                            onBlur={this.onBlurGroup.bind(this)}\r\n                                            value={this.state.group}\r\n                                            name=\"mentor\"\r\n                                        >\r\n                                            <option value=''>Select a group</option>\r\n                                            {\r\n                                                this.state.groups.map(\r\n                                                    group =>\r\n                                                        <option key={group.id} value={group.id}>{group.groupName}</option>\r\n                                                )\r\n                                            }\r\n                                        </select>\r\n                                    </fieldset>\r\n                                    <button className=\"btn btn-success\" type=\"submit\">Join</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JoinGroupComponent"]},"metadata":{},"sourceType":"module"}